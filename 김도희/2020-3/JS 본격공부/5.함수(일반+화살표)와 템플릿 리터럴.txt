JS 본격 공부

- 사이트 : https://learnjs.vlpt.us/basics/02-variables.html 참고


5. 함수

함수는 특정한 코드를 하나의 명령으로 실행할 수 있도록 한다.
예 ) function sum(a,b) {  //함수의 기본적 형태는 function 함수이름(매개변수들(함수에서 받아오는 값들을 말하며 여기에서는 1과 2를 받아오게 된다.))이다.
         return a+b;        //위에서 받아온 1과 2(각각 a와 b)를 더한값을 return(값을 반환해준다. 즉 1+2인 3을 반환)
      }

      const AddResult = sum(1,2);  // 위에서 반환해준 결과 값 3을 AddResult안에 넣어준다.
      console.log(AddResult);        // 결과 값으로 3이 출력된다.

- 참고로 함수에서 return 사용 시 함수는 끝이 나게 되며, return 아래의 코드는 실행되지 않는다.


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Template Literal(템플릿 리터럴)
 - ES6의 문법(ES6는 자바스크립트의 버전을 가르키며 ES7 , ES9등 다양한 버전들이 계속 나오고 있음)이며 문자열 조합때 사용하는 '+'대신 사용 사능한 문법

변환 전 예시 ) function hello(name) {
                   console.log('Hi, ' + name + '!!!');   //결과 값으로 Hi kim!!! 이 출력 됨
                   }
                   hello('kim');  


변환 후 예시 ) function hello(name) {
                   console.log(`Hi, ' ${name}!!!`);       //결과 값으로 위와 동일한 Hi Kim!!!이 출력 됨(H앞과 !뒤에 붙은 ` 는 ~키를 누를 시(shift x) 표시 가능)
                   }
                   hello('kim');


- 템플릿 리터럴은 +연산자를 사용하지 않아도 새로운 문자열을 삽입할 수 있으며 ${  } 내에 삽입된 표현식은 문자열로 타입 변환이 된다.
- ${  } 안에는 매개 변수로 받아온 값을 사용한 식을 넣을 수 있고, 그 외의 문자열은 그냥 ` 와 ` 사이에 삽입해주면 된다.
예 ) `나의 이름은 ${name} 입니다.`


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
화살표 함수
- 함수를 선언하는 또다른 방식이다.(기존은 function 이름(매개변수) { } 의 형태)
예 ) const plus = (a,b) => {      
          return a+b;                   //옆과 같이 바로 return문이 나올 시에는 const plus = (a,b) => a+b; 와 같이 줄여쓸 수 있다.
      };

     console.log( plus(1,2) );  //결과 값으로 3이( a와b를 더한 값, 즉 1+2인 3을 ) 출력 된다.
  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1] 일반 함수를 사용하여 점수에 따른 등급 출력하기
- 함수를 배울 때 많이 나오는 예제이다.

입력된 점수에 따라 등급을 출력하는 프로그램을 만들어라(점수 100점 - A , 90점 이상 - B , 80점 이상 - C , 70점 이상 - d , 70점 미만 - e)
예 )function getscore(score) {
       if(score === 100) {
          return 'A';
       } 
       else if(score >= 90) {
          return 'B';
       } 
       else if(score >= 80) {
          return 'C';
       } 
       else if(score >= 70) {
         return 'D';
       }
       else if(score < 70) {
          return 'E';
       }  
    }
      const Score = GetScore(70);
      console.log(Score);               //D가 출력됨



2] 화살표 함수를 사용하여 점수에 따른 등급 출력하기
예 ) const getgrade = score => {
         if(score === 100) {
             return 'A';
          } 
          else if(score >= 90) {
             return 'B';
          } 
          else if(score >= 80) {
             return 'C';
          } 
          else if(score >= 70) {
            return 'D';
          }
          else if(score < 70) {
             return 'E';  
          }  
     }

     const grade = getgrade(80);
     console.log(grade);               // C가 출력됨