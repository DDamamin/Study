JS 본격 공부

- 사이트 : https://learnjs.vlpt.us/basics/02-variables.html 참고


9. 배열 내장 함수

배열을 다루기에 유용한 내장 함수들에 대해 알아보자

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1 ] for Each
- 가장 쉬운 배열 내장 함수이며 기존에 배웠던 for문을 대체할 수 있다.

변환 전 ) const animal = [ '개' , '고양이' , '닭' ];    
            for ( let i = 0, i < animal.length; i++ ) {
                    console.log(animal[i]);
            }


변환 후 ) const animal = [ '개' , '고양이' , '닭' ];
            animal.forEach( ani = > {    //for Each 함수의 매개변수로, 각 원소에 대해 처리하고 싶은 코드를 함수로 넣는다. 여기서 ani는 각 원소를 말한다.
               console.log(ani);            
            });


- 이렇게 함수형태의 매개변수를 전달하는 것을 콜백함수라 한다.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2 ] map
- 배열 안의 각 원소를 변환 할 때 사용되고, 이 과정 중 새로운 배열이 만들어진다.
예 ) 
const num = [ 1, 2, 3, 4, 5 ];               //이런 배열이 있다고 가정

const plus = [ ];
for ( let i = 0; i < num.length; i++) {
         plus.push( num[i] + num[i] );   // 배열안의 모든 수를 자신+자신의 형태로 더해서 새로운 배열을 만듬
}

console.log(plus);  // 2 4 6 8 10 이 출력됨


========================================================
for Each 사용 )
const num = [ 1, 2, 3, 4, 5 ];

const plus = [ ];
plus.forEach( n => {
       plus.push(n + n);
});

console.log(plus);          // 2 4 6 8 10 이 출력됨
========================================================
map 사용 )
const num = [ 1, 2, 3, 4, 5 ];

const plus = n => n+n;
const add = num.map(plus);    // num.map(n => n+n); 으로 표기해도 된다.
console.log(add);        //2 4 6 8 10 이 출력됨

- map함수의 매개변수로는 변화를 주는 함수를 전달한다. 이를 변화함수라 한다.


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3 ] indexOf
- 원하는 항목이 몇번째 원소인지 찾아주는 함수이다.
예 ) 
const num = [ 1, 2, 3, 4, 5 ];
const index = num.indexOf(3);
console.log(index);  // 결과값은 2이다.


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4 ] findlndex
- 배열 안에 있는 값이 숫자,문자열, 불리언이라면 찾고자 하는 항목이 몇번째 인지 알아내기 위해 indexOf를 사용할 수 있지만 값이 객체나 배열이면 
  indexOf로 찾을 수 없다.

예 )
const MyPet = [
 { 
      name : 'do',
      age : 1
  } ,
  
 { 
      name : 'ko',
      age : 2
  } 
];

const index = MyPet.findIndex(pet => pet.name === 'ko');
console.log(index);       //  1이 출력됨


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5 ] find
- findIndex와 비슷하지만 , fine은 찾아낸 값 자체를 반환한다.  

const MyPet = [
 { 
      name : 'do',
      age : 1
  } ,
  
 { 
      name : 'ko',
      age : 2
  } 
];

const index = MyPet.findIndex(pet => pet.name === 'ko');
console.log(index);       //  { name : 'ko' , age : 2 } 가 출력됨

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6 ] filter
- 배열애서 특정 조건을 만족하는 값들을 따로 추출해 새로운 배열을 만든다.

예 )
const MyPet = [
 { 
      name : 'do',
      age : 1
  } ,
  
 { 
      name : 'ko',
      age : 2
  }  ,
  
 { 
      name : 'ro',
      age : 1
  } 
];

const SameAge = animal.filter( sameAge = sameAge.age === 1);
console.log(SameAge);   [ {name : 'ko' , age : 1} , {name : 'ro' , age : 1} ] 가 출력됨 


