1. Framework(프레임워크)
프레임워크는 뼈대나 기반 구조를 뜻하는데 APP 개발 시 필수적 코드, 알고리즘, 데이터베이스 연동 등과
같은 기능들을 위해 어느정도 뼈대를 제공해주는 것을 말한다. 그러므로 그 뼈대 위에 프로그래머가 코드를 작성하여 APP을 완성해야 한다.
어느정도 뼈대를 제공해주어 객체 지향 개발을 하면서 일관성 부족 등의 문제를 해결해준다.
그래서 소프트웨어에서는 아래와 같이 정의하고는한다.

"소프트웨어의 특정 문제를 해결하기 위해서 상호 협력하는 클래스와 인터페이스의 집합"


2. Library(라이브러리)
라이브러리는 특정 기능에 대한 도구나 함수들을 모은 집합이다. 즉 프로그래머가 개발하는데 필요한 것들을 모아둔 것이다.
라이브러리는 아래와 같이 정의할 수 있다.

"단순 활용이 가능한 도구들의 집합"


3. Framework와 Library의 차이
둘의 차이는 흐름에 대한 제어 권한이 어디에 있느냐이다.
프레임워크의 경우 전체적인 흐름을 자체적으로 가지고 있으며, 프로그래머가 그 안에 필요한 코드를 작성하는 반면
라이브러리는 사용자가 흐름에 대해 제어를 하며 필요한 상황에 가져다 쓴다.

한 마디로 정리하자면 프레임워크에는 "제어의 역전"이 적용되어 있다.

제어의 역전이란?
어떠한 일을 하도록 만들어진 프레임워크에 제어의 권한을 넘김으로써 클라이언트 코드가 신경써야 하는 것을 줄이는 전략이다.
일반적으로 우리는 프로젝트를 생성하고 Main함수를 만든 뒤 시작지점을 형성한다.
그리고 Main 함수에서 프로그램 흐름을 정하는 것은 프로그래머의 몫으로 우리가 어떤 순서를 부여하느냐에 따라 흐름을 제어하는 것이 일반적 사고이다.

하지만 프레임워크는 일반적 사고와 반대되는 모습을 보여주는데 실행의 흐름을 프레임워크 자체가 가지고 있어 우리의 코드를 프레임워크 안에 넣어 개발해야 한다.
실제 Maven과 같은 프레임워크의 프로젝트를 생성해보면 어느 정도 뼈대만 만든 뒤 그 안에 필요에 따라 우리의 코드를 넣는다.
일반적으로 프로그래머가 가지고 있어야하는 제어의 권한을 프레임워크에게 주었기 때문에 제어의 역전이라 부른다.