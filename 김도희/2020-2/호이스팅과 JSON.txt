호이스팅이란

자바 스크립트 함수는 실행되기 전 함수 안에 필요한 변수들을 모아 유효 범위 최상단에 선언한다.

- 자바 스크립트 Parser(구문을 분석, 분해하는 것) 가 함수 실행전에 함수를 한 번씩 훑고 지나간다.
- 함수 안에 존재하는 변수/함수 선언에 관련된 정보를 기억하고 있다가 실행시킨다.

( 이때 유효범위는 {} 이다.)

한 마디로 함수 내에서 아래쪽에 존재하는 것중 필요한 값들을 끌어올리는 것이라 할 수 있다.
- 이는 어디까지나 자바스크립트 내부적으로 처리하는 것뿐 실제 코드가 올려지는 것은 아니다.

호이스팅은 var 선언과 함수 선언문에서 일어나며 선언만 위로 올려질뿐 할당은 올려지지 않는다.
- let , const 에서는 호이스팅이 발생하지 않는다.

같은 이름의 var 선언이 있을 경우 변수 선언이 함수 선언보다 위로 끌어올려 진다.

---------------------------------------------------------------------------------------------------------------------------------

호의스팅 주의점

프로그래밍에 있어서 호이스팅은 불리한 점이 많다.

우선 코드의 가독성과 유지보수에 좋지 않은 영향을 끼칠 수 있다.
- 물론 호이스팅을 알지 못해도 코드 상단부에 함수와 변수를 선언한다면, 호이스팅으로 인한 꼬임은 방지 가능

그리고 let과 const 사용을 권유한다.
-   var는 호이스팅의 영향을 받기 때문에 어지럽고 필요없는 코드들이 생겨날 수 있다. 다만 아직 let과 const가
생긴지 그렇게 오래되지 않았기 때문에 만약을 대비해 var와 호이스팅의 기본 개념을 익히고 가는 것이 좋을 것 같다.







===========================================================================

JSON이란

javascript Object Notation(한국말로 번역하자면 :: 자바 스크립트 객체 표기법)의 줄인 말로 쉽게 말하자면 데이터를 표시하는 포맷. 
java script로 파생되었기 때문에 자바 스크립트 구문의 형식을 따르고 있지만 독립적인 데이터형 포맷이라
c , c++ 등 다양한 프로그래밍 언어에서 활용이 가능하다.

JSON은 key : value 형식으로 포맷이 정해져 있고 주로 비동기 브라우저/서버통신을 위해 사용되고 큰 따옴표(="")로 묶여 사용된다.
- 그러므로 DATA값에서 (\)와 (")는 인식문제로 사용이 불가능하다.(\는 개행(\n) , 탭(\t) 등으로 이용됨 )

아래는 JSON의 예시이다.

1. 배열
[ {"name" : "kdh"}, ["age", 18] ]

2. 객체
{ "name" : "kdh", "age", 18 }

{
     "name" : "kdh",
     "age", 18
}